name: CI/CD Pipeline

on:
  push:
    branches: [ master, atunner ]
  pull_request:
    branches: [ master ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Check environment and skip CUDA if not available
      run: |
        python -c "
        try:
            import cupy
            print('CUDA available: True')
        except ImportError:
            print('CUDA available: False - will skip CUDA tests')
        "
        echo "Environment check complete"

    - name: Lint with flake8
      run: |
        flake8 atunner tests --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 atunner tests --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

    - name: Check code formatting with black
      run: |
        black --check atunner tests

    - name: Check import sorting with isort
      run: |
        isort --check-only atunner tests

    - name: Type checking with mypy
      run: |
        mypy atunner

    - name: Test with pytest
      run: |
        pytest tests/ -v --cov=atunner --cov-report=xml -m "not cuda"

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  build:
    needs: [lint-and-test]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build

    - name: Build package
      run: |
        python -m build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/
