##############################################################################
# base image: 20.04
# default versions
# PYTHON_VERSION=3.8
# TORCH_VERSION=2.0.0
# CUDA_VERSON=11.7
##############################################################################
FROM pytorch/pytorch:2.0.0-cuda11.7-cudnn8-devel as base

ARG PYTHON_VERSION=3.8

USER root
WORKDIR /root

ENV BASH_ENV /root/.bashrc
ENV SHELL /bin/bash
COPY dev/docker/pip.conf ~/.pip/pip.conf

RUN sed -i s@/archive.ubuntu.com/@/mirrors.aliyun.com/@g /etc/apt/sources.list
RUN sed -i s@/security.ubuntu.com/@/mirrors.aliyun.com/@g /etc/apt/sources.list
RUN apt-get clean

##############################################################################
# conda and other utils
##############################################################################
FROM base as util-base
ARG PYTHON_VERSION=3.8

RUN cd ~/ && \
    apt-get update && apt-get install -y wget git vim && \
    wget https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/Miniconda3-latest-Linux-x86_64.sh --no-check-certificate -O miniconda-install.sh && \
    chmod +x miniconda-install.sh

##############################################################################
# rdma, cuda compat
##############################################################################
FROM util-base as torch-base

COPY dev/docker/handle_driver_compat.sh ./

RUN echo "/usr/local/cuda/lib" >> /etc/ld.so.conf.d/nvidia.conf && \
    echo "/usr/local/cuda/lib64" >> /etc/ld.so.conf.d/nvidia.conf && \
    echo "/usr/lib64" >> /etc/ld.so.conf.d/nvidia.conf && \
    echo "ldconfig > /dev/null 2>&1 " >> /etc/bashrc && \
    apt-get install -y build-essential libnl-3-dev libgl1-mesa-dev git && \
    apt-get clean all && \
    cat handle_driver_compat.sh >> /etc/bashrc && \
    rm -rf handle_driver_compat.sh

##############################################################################
# atorch install
##############################################################################
COPY atorch/requirements.txt ./
RUN pip install -r requirements.txt && \
    pip install pre-commit grpcio grpcio-tools && \
    rm -f ./requirements.txt
