# -*- coding: utf-8 -*-
# Copyright 2024 The DLRover Authors. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: elastic_training.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import enum_type_wrapper

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor.FileDescriptor(
    name="elastic_training.proto",
    package="elastic",
    syntax="proto3",
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
    serialized_pb=b'\n\x16\x65lastic_training.proto\x12\x07\x65lastic"+\n\x08Response\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0e\n\x06reason\x18\x02 \x01(\t";\n\x07Message\x12\x0f\n\x07node_id\x18\x01 \x01(\x05\x12\x11\n\tnode_type\x18\x02 \x01(\t\x12\x0c\n\x04\x64\x61ta\x18\x03 \x01(\x0c*d\n\x08TaskType\x12\x08\n\x04NONE\x10\x00\x12\x0c\n\x08TRAINING\x10\x01\x12\x0e\n\nEVALUATION\x10\x02\x12\x0e\n\nPREDICTION\x10\x03\x12\x08\n\x04WAIT\x10\x04\x12\x16\n\x12TRAIN_END_CALLBACK\x10\x05\x32\x62\n\x06Master\x12-\n\x06report\x12\x10.elastic.Message\x1a\x11.elastic.Response\x12)\n\x03get\x12\x10.elastic.Message\x1a\x10.elastic.Messageb\x06proto3',
)

_TASKTYPE = _descriptor.EnumDescriptor(
    name="TaskType",
    full_name="elastic.TaskType",
    filename=None,
    file=DESCRIPTOR,
    create_key=_descriptor._internal_create_key,
    values=[
        _descriptor.EnumValueDescriptor(
            name="NONE",
            index=0,
            number=0,
            serialized_options=None,
            type=None,
            create_key=_descriptor._internal_create_key,
        ),
        _descriptor.EnumValueDescriptor(
            name="TRAINING",
            index=1,
            number=1,
            serialized_options=None,
            type=None,
            create_key=_descriptor._internal_create_key,
        ),
        _descriptor.EnumValueDescriptor(
            name="EVALUATION",
            index=2,
            number=2,
            serialized_options=None,
            type=None,
            create_key=_descriptor._internal_create_key,
        ),
        _descriptor.EnumValueDescriptor(
            name="PREDICTION",
            index=3,
            number=3,
            serialized_options=None,
            type=None,
            create_key=_descriptor._internal_create_key,
        ),
        _descriptor.EnumValueDescriptor(
            name="WAIT",
            index=4,
            number=4,
            serialized_options=None,
            type=None,
            create_key=_descriptor._internal_create_key,
        ),
        _descriptor.EnumValueDescriptor(
            name="TRAIN_END_CALLBACK",
            index=5,
            number=5,
            serialized_options=None,
            type=None,
            create_key=_descriptor._internal_create_key,
        ),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=141,
    serialized_end=241,
)
_sym_db.RegisterEnumDescriptor(_TASKTYPE)

TaskType = enum_type_wrapper.EnumTypeWrapper(_TASKTYPE)
NONE = 0
TRAINING = 1
EVALUATION = 2
PREDICTION = 3
WAIT = 4
TRAIN_END_CALLBACK = 5


_RESPONSE = _descriptor.Descriptor(
    name="Response",
    full_name="elastic.Response",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    create_key=_descriptor._internal_create_key,
    fields=[
        _descriptor.FieldDescriptor(
            name="success",
            full_name="elastic.Response.success",
            index=0,
            number=1,
            type=8,
            cpp_type=7,
            label=1,
            has_default_value=False,
            default_value=False,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
            create_key=_descriptor._internal_create_key,
        ),
        _descriptor.FieldDescriptor(
            name="reason",
            full_name="elastic.Response.reason",
            index=1,
            number=2,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=b"".decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
            create_key=_descriptor._internal_create_key,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=35,
    serialized_end=78,
)


_MESSAGE = _descriptor.Descriptor(
    name="Message",
    full_name="elastic.Message",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    create_key=_descriptor._internal_create_key,
    fields=[
        _descriptor.FieldDescriptor(
            name="node_id",
            full_name="elastic.Message.node_id",
            index=0,
            number=1,
            type=5,
            cpp_type=1,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
            create_key=_descriptor._internal_create_key,
        ),
        _descriptor.FieldDescriptor(
            name="node_type",
            full_name="elastic.Message.node_type",
            index=1,
            number=2,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=b"".decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
            create_key=_descriptor._internal_create_key,
        ),
        _descriptor.FieldDescriptor(
            name="data",
            full_name="elastic.Message.data",
            index=2,
            number=3,
            type=12,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=b"",
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
            create_key=_descriptor._internal_create_key,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=80,
    serialized_end=139,
)

DESCRIPTOR.message_types_by_name["Response"] = _RESPONSE
DESCRIPTOR.message_types_by_name["Message"] = _MESSAGE
DESCRIPTOR.enum_types_by_name["TaskType"] = _TASKTYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Response = _reflection.GeneratedProtocolMessageType(
    "Response",
    (_message.Message,),
    {
        "DESCRIPTOR": _RESPONSE,
        "__module__": "elastic_training_pb2"
        # @@protoc_insertion_point(class_scope:elastic.Response)
    },
)
_sym_db.RegisterMessage(Response)

Message = _reflection.GeneratedProtocolMessageType(
    "Message",
    (_message.Message,),
    {
        "DESCRIPTOR": _MESSAGE,
        "__module__": "elastic_training_pb2"
        # @@protoc_insertion_point(class_scope:elastic.Message)
    },
)
_sym_db.RegisterMessage(Message)


_MASTER = _descriptor.ServiceDescriptor(
    name="Master",
    full_name="elastic.Master",
    file=DESCRIPTOR,
    index=0,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
    serialized_start=243,
    serialized_end=341,
    methods=[
        _descriptor.MethodDescriptor(
            name="report",
            full_name="elastic.Master.report",
            index=0,
            containing_service=None,
            input_type=_MESSAGE,
            output_type=_RESPONSE,
            serialized_options=None,
            create_key=_descriptor._internal_create_key,
        ),
        _descriptor.MethodDescriptor(
            name="get",
            full_name="elastic.Master.get",
            index=1,
            containing_service=None,
            input_type=_MESSAGE,
            output_type=_MESSAGE,
            serialized_options=None,
            create_key=_descriptor._internal_create_key,
        ),
    ],
)
_sym_db.RegisterServiceDescriptor(_MASTER)

DESCRIPTOR.services_by_name["Master"] = _MASTER

# @@protoc_insertion_point(module_scope)
