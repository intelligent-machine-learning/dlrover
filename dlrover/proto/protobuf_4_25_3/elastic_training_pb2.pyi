# -*- coding: utf-8 -*-
# Copyright 2024 The DLRover Authors. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: elastic_training.proto
from google.protobuf.internal import enum_type_wrapper as _enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from typing import ClassVar as _ClassVar, Optional as _Optional

DESCRIPTOR: _descriptor.FileDescriptor

class TaskType(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
    __slots__ = []
    NONE: _ClassVar[TaskType]
    TRAINING: _ClassVar[TaskType]
    EVALUATION: _ClassVar[TaskType]
    PREDICTION: _ClassVar[TaskType]
    WAIT: _ClassVar[TaskType]
    TRAIN_END_CALLBACK: _ClassVar[TaskType]

NONE: TaskType
TRAINING: TaskType
EVALUATION: TaskType
PREDICTION: TaskType
WAIT: TaskType
TRAIN_END_CALLBACK: TaskType

class Response(_message.Message):
    __slots__ = ["success", "reason"]
    SUCCESS_FIELD_NUMBER: _ClassVar[int]
    REASON_FIELD_NUMBER: _ClassVar[int]
    success: bool
    reason: str
    def __init__(
        self, success: bool = ..., reason: _Optional[str] = ...
    ) -> None: ...

class Message(_message.Message):
    __slots__ = ["node_id", "node_type", "data"]
    NODE_ID_FIELD_NUMBER: _ClassVar[int]
    NODE_TYPE_FIELD_NUMBER: _ClassVar[int]
    DATA_FIELD_NUMBER: _ClassVar[int]
    node_id: int
    node_type: str
    data: bytes
    def __init__(
        self,
        node_id: _Optional[int] = ...,
        node_type: _Optional[str] = ...,
        data: _Optional[bytes] = ...,
    ) -> None: ...
